version: '3.4'

services:
  db:
    image: library/postgres:9.6
    container_name: 'postgresJibby'
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgresJibby
    volumes:
      - db_data:/var/lib/postgresql/data

  jibby-jabber:
    container_name: jibby-jabber
    image: docker.pkg.github.com/nickyfox/jibby-jabber/jibby-jabber:latest
    ports:
      - '8080:8080'
    environment:
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: postgresJibby
      DB_HOST: postgresJibby
      DB_PORT: 5432

  user-api:
    container_name: jibby-jabber-users
    image: docker.pkg.github.com/nickyfox/jibby-jabber-user/jibby-jabber-user:latest
    ports:
      - '8082:8080'
    environment:
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: postgresJibby
      DB_HOST: postgresJibby
      DB_PORT: 5432

  posts-api:
    container_name: jibby-jabber-posts
    image: docker.pkg.github.com/agusllacuara/jibby-jabber-post/jibby-jabber-post:latest
    ports:
      - '8083:8080'
    environment:
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: postgresJibby
      DB_HOST: postgresJibby
      DB_PORT: 5432

  messages-api:
    container_name: jibby-jabber-messages
    image: docker.pkg.github.com/nickyfox/jibby-jabber-message/jibby-jabber-messages:latest
    ports:
      - '8084:8080'
    environment:
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: postgresJibby
      DB_HOST: postgresJibby
      DB_PORT: 5432

  client:
    container_name: jibby-jabber-client
    image: docker.pkg.github.com/agusllacuara/jibber-jabber-frontend/jj-frontend-image:latest

  nginx:
    image: nginx:stable-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/nginx/app-prod.conf:/etc/nginx/nginx.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  db_data:
